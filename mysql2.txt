1,innodb和myisam的区别
	1）InnoDB支持事务、支持行级锁、支持MVCC、支持外键、不支持全文索引。MyISAM支持表级锁、支持全文索引。
	2）innodb引擎的四大特性：插入缓冲、二次写、自适应哈希索引、预读。
	3）select count(*)myisam更快，因其内部维护了一个计数器，可直接调取。
2，mysql日志
	错误日志：-log-err
	查询日志：-log
	慢查询日志：-log-slow-queries
	更新日志：-log-update
	二进制日志：-log-bin
	查询日志是否开启：mysql>show variables like 'log_%'; mysql> SHOW  GLOBAL VARIABLES LIKE '%log%';
	查看当前日志：mysql> show master status;
	显示二进制日志数目：mysql> show master logs; 
	看二进制日志文件用mysqlbinlog：shell>mysqlbinlog mail-bin.000001 或者shell>mysqlbinlog mail-bin.000001 | tail  
	在my.ini中配置指定日志的输出位置
		# 在[mysqld] 中輸入  
		#log  
		log-error="E:/PROGRA~1/EASYPH~1.0B1/mysql/logs/error.log"  
		log="E:/PROGRA~1/EASYPH~1.0B1/mysql/logs/mysql.log"  
		long_query_time=2  
		log-slow-queries= "E:/PROGRA~1/EASYPH~1.0B1/mysql/logs/slowquery.log" 
	开启慢查询：long_query_time =2  --是指执行超过多久的sql会被log下来，这里是2秒 
	log-slow-queries= /usr/local/mysql/log/slowquery.log  --将查询返回较慢的语句进行记录 
	log-queries-not-using-indexes = nouseindex.log  --就是字面意思，log下来没有使用索引的query 
	log=mylog.log  --对所有执行语句进行记录 
3，mysql事务
	不考虑事务隔离性会出现的问题：
	1，脏读：
		在一个事务处理过程中读取了另一个未提交的事务中的数据。
	2，不可重复复
		对于数据库中的某个数据，一个事务范围内多次查询却返回了不同的数据值，这是由于在查询间隔，被另一个事务修改并提交了。
	不可重复读和脏读的区别是，脏读是某一事务读取了另一个事务未提交的脏数据，而不可重复读则是读取了前一事务提交的数据。
	3，虚读(幻读)
		幻读是事务非独立执行时发生的一种现象。
	幻读和不可重复读都是读取了另一条已经提交的事务（这点就脏读不同），所不同的是不可重复读查询的都是同一个数据项，而幻读针对的是一批数据整体（比如数据的个数）。
	四种隔离级别：(级别越高，执行效率就越低)
	1）Serializable (串行化)
	：可避免脏读、不可重复读、幻读的发生。
	2）Repeatable read (可重复读)
	：可避免脏读、不可重复读的发生。
	3）Read committed (读已提交)：可避免脏读的发生。
	4）Read uncommitted (读未提交)：最低级别，任何情况都无法保证。
	在MySQL数据库中，支持上面四种隔离级别，默认的为Repeatable read (可重复读)；
	而在Oracle数据库中，只支持Serializable (串行化)级别和Read committed (读已提交)这两种级别，其中默认的为Read committed级别。
	查看当前事务的隔离级别：select @@tx_isolation;
	设置隔离级别：set  [glogal | session]  transaction isolation level 隔离级别名称;set tx_isolation=’隔离级别名称;(设置数据库的隔离级别一定要是在开启事务之前！)
	JDBC中设置隔离级别：(隔离级别的设置只对当前连接有效)
	conn=JdbcUtils.getConnnection();
	conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);//设置该连接的隔离级别
	conn.setAutoCommit(false);//开启事务
4，问题
	一个6亿的表a，一个3亿的表b，通过外间tid关联，你如何最快的查询出满足条件的第50000到第50200中的这200条数据记录。
	1、如果A表TID是自增长,并且是连续的,B表的ID为索引。
	select * from a,b where a.tid = b.id and a.tid>500000 limit 200;
	2、如果A表的TID不是连续的,那么就需要使用覆盖索引.TID要么是主键,要么是辅助索引,B表ID也需要有索引。
	select * from b , (select tid from a limit 50000,200) a where b.id = a .tid;



